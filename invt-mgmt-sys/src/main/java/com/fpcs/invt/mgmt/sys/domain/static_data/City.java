package com.fpcs.invt.mgmt.sys.domain.static_data;
// default package
// Generated Jun 25, 2017 4:27:52 PM by Hibernate Tools 5.2.3.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * City generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "city", schema = "static_data", uniqueConstraints = { @UniqueConstraint(columnNames = "city") })
public class City implements java.io.Serializable {

	private CityId id;
	private Country country;
	private State state;
	private Date deletedOn;

	public City() {
	}

	public City(CityId id, Country country, State state) {
		this.id = id;
		this.country = country;
		this.state = state;
	}

	public City(CityId id, Country country, State state, Date deletedOn) {
		this.id = id;
		this.country = country;
		this.state = state;
		this.deletedOn = deletedOn;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "city", column = @Column(name = "city", unique = true, nullable = false, length = 50)),
			@AttributeOverride(name = "state", column = @Column(name = "state", unique = true, nullable = false, length = 50)),
			@AttributeOverride(name = "country", column = @Column(name = "country", unique = true, nullable = false, length = 50)) })
	public CityId getId() {
		return this.id;
	}

	public void setId(CityId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "country", unique = true, nullable = false, insertable = false, updatable = false)
	public Country getCountry() {
		return this.country;
	}

	public void setCountry(Country country) {
		this.country = country;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name = "state", unique = true, nullable = false, insertable = false, updatable = false),
		@JoinColumn(name = "country", unique = true, nullable = false, insertable = false, updatable = false)
	})
	public State getState() {
		return this.state;
	}

	public void setState(State state) {
		this.state = state;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "deleted_on", length = 13)
	public Date getDeletedOn() {
		return this.deletedOn;
	}

	public void setDeletedOn(Date deletedOn) {
		this.deletedOn = deletedOn;
	}

}
